//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FormsWKR1.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deutschStart", ReplyAction="http://tempuri.org/IService1/deutschStartResponse")]
        int deutschStart(string array);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deutschStart", ReplyAction="http://tempuri.org/IService1/deutschStartResponse")]
        System.Threading.Tasks.Task<int> deutschStartAsync(string array);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/groverStart", ReplyAction="http://tempuri.org/IService1/groverStartResponse")]
        string[] groverStart(string array, int N, int numberIterations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/groverStart", ReplyAction="http://tempuri.org/IService1/groverStartResponse")]
        System.Threading.Tasks.Task<string[]> groverStartAsync(string array, int N, int numberIterations);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : FormsWKR1.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<FormsWKR1.ServiceReference2.IService1>, FormsWKR1.ServiceReference2.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public int deutschStart(string array) {
            return base.Channel.deutschStart(array);
        }
        
        public System.Threading.Tasks.Task<int> deutschStartAsync(string array) {
            return base.Channel.deutschStartAsync(array);
        }
        
        public string[] groverStart(string array, int N, int numberIterations) {
            return base.Channel.groverStart(array, N, numberIterations);
        }
        
        public System.Threading.Tasks.Task<string[]> groverStartAsync(string array, int N, int numberIterations) {
            return base.Channel.groverStartAsync(array, N, numberIterations);
        }
    }
}
