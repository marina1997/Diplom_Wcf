//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FormsWKR1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deutschStart", ReplyAction="http://tempuri.org/IService1/deutschStartResponse")]
        int deutschStart(string array);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deutschStart", ReplyAction="http://tempuri.org/IService1/deutschStartResponse")]
        System.Threading.Tasks.Task<int> deutschStartAsync(string array);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/groverStart", ReplyAction="http://tempuri.org/IService1/groverStartResponse")]
        string groverStart(string arrayStr, int numberIterations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/groverStart", ReplyAction="http://tempuri.org/IService1/groverStartResponse")]
        System.Threading.Tasks.Task<string> groverStartAsync(string arrayStr, int numberIterations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/shorStart", ReplyAction="http://tempuri.org/IService1/shorStartResponse")]
        int[] shorStart(int numberToFactor, int registerLength);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/shorStart", ReplyAction="http://tempuri.org/IService1/shorStartResponse")]
        System.Threading.Tasks.Task<int[]> shorStartAsync(int numberToFactor, int registerLength);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/simonStart", ReplyAction="http://tempuri.org/IService1/simonStartResponse")]
        string simonStart(int[] array);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/simonStart", ReplyAction="http://tempuri.org/IService1/simonStartResponse")]
        System.Threading.Tasks.Task<string> simonStartAsync(int[] array);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : FormsWKR1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<FormsWKR1.ServiceReference1.IService1>, FormsWKR1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int deutschStart(string array) {
            return base.Channel.deutschStart(array);
        }
        
        public System.Threading.Tasks.Task<int> deutschStartAsync(string array) {
            return base.Channel.deutschStartAsync(array);
        }
        
        public string groverStart(string arrayStr, int numberIterations) {
            return base.Channel.groverStart(arrayStr, numberIterations);
        }
        
        public System.Threading.Tasks.Task<string> groverStartAsync(string arrayStr, int numberIterations) {
            return base.Channel.groverStartAsync(arrayStr, numberIterations);
        }
        
        public int[] shorStart(int numberToFactor, int registerLength) {
            return base.Channel.shorStart(numberToFactor, registerLength);
        }
        
        public System.Threading.Tasks.Task<int[]> shorStartAsync(int numberToFactor, int registerLength) {
            return base.Channel.shorStartAsync(numberToFactor, registerLength);
        }
        
        public string simonStart(int[] array) {
            return base.Channel.simonStart(array);
        }
        
        public System.Threading.Tasks.Task<string> simonStartAsync(int[] array) {
            return base.Channel.simonStartAsync(array);
        }
    }
}
